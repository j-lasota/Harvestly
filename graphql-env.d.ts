/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'BigDecimal': unknown;
    'Boolean': unknown;
    'BusinessHours': { kind: 'OBJECT'; name: 'BusinessHours'; fields: { 'closingTime': { name: 'closingTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LocalTime'; ofType: null; }; } }; 'dayOfWeek': { name: 'dayOfWeek'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DayOfWeek'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'openingTime': { name: 'openingTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LocalTime'; ofType: null; }; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; }; };
    'DayOfWeek': { name: 'DayOfWeek'; enumValues: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'; };
    'Float': unknown;
    'ID': unknown;
    'Int': unknown;
    'LocalTime': unknown;
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'addFavoriteShop': { name: 'addFavoriteShop'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'createBusinessHours': { name: 'createBusinessHours'; type: { kind: 'OBJECT'; name: 'BusinessHours'; ofType: null; } }; 'createOpinion': { name: 'createOpinion'; type: { kind: 'OBJECT'; name: 'Opinion'; ofType: null; } }; 'createOwnProduct': { name: 'createOwnProduct'; type: { kind: 'OBJECT'; name: 'OwnProduct'; ofType: null; } }; 'createProduct': { name: 'createProduct'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'createShop': { name: 'createShop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'createUser': { name: 'createUser'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'createVerification': { name: 'createVerification'; type: { kind: 'OBJECT'; name: 'Verification'; ofType: null; } }; 'deleteBusinessHours': { name: 'deleteBusinessHours'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleteOpinion': { name: 'deleteOpinion'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleteOwnProduct': { name: 'deleteOwnProduct'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleteProduct': { name: 'deleteProduct'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleteShop': { name: 'deleteShop'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleteUser': { name: 'deleteUser'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleteVerification': { name: 'deleteVerification'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'removeFavoriteShop': { name: 'removeFavoriteShop'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'updateBusinessHours': { name: 'updateBusinessHours'; type: { kind: 'OBJECT'; name: 'BusinessHours'; ofType: null; } }; 'updateOpinion': { name: 'updateOpinion'; type: { kind: 'OBJECT'; name: 'Opinion'; ofType: null; } }; 'updateOwnProduct': { name: 'updateOwnProduct'; type: { kind: 'OBJECT'; name: 'OwnProduct'; ofType: null; } }; 'updateProduct': { name: 'updateProduct'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'updateShop': { name: 'updateShop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'updateUser': { name: 'updateUser'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'Opinion': { kind: 'OBJECT'; name: 'Opinion'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'stars': { name: 'stars'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; }; };
    'OwnProduct': { kind: 'OBJECT'; name: 'OwnProduct'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'imageUrl': { name: 'imageUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigDecimal'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; }; };
    'Product': { kind: 'OBJECT'; name: 'Product'; fields: { 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductCategory'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ownProducts': { name: 'ownProducts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OwnProduct'; ofType: null; }; }; }; } }; 'verified': { name: 'verified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ProductCategory': { name: 'ProductCategory'; enumValues: 'FRUIT' | 'VEGETABLE'; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'businessHours': { name: 'businessHours'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessHours'; ofType: null; }; } }; 'businessHoursById': { name: 'businessHoursById'; type: { kind: 'OBJECT'; name: 'BusinessHours'; ofType: null; } }; 'opinionById': { name: 'opinionById'; type: { kind: 'OBJECT'; name: 'Opinion'; ofType: null; } }; 'opinions': { name: 'opinions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Opinion'; ofType: null; }; } }; 'ownProductById': { name: 'ownProductById'; type: { kind: 'OBJECT'; name: 'OwnProduct'; ofType: null; } }; 'ownProducts': { name: 'ownProducts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OwnProduct'; ofType: null; }; } }; 'productById': { name: 'productById'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; 'shopById': { name: 'shopById'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'shops': { name: 'shops'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userById': { name: 'userById'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'users': { name: 'users'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'verificationById': { name: 'verificationById'; type: { kind: 'OBJECT'; name: 'Verification'; ofType: null; } }; 'verifications': { name: 'verifications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Verification'; ofType: null; }; } }; }; };
    'Shop': { kind: 'OBJECT'; name: 'Shop'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'businessHours': { name: 'businessHours'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessHours'; ofType: null; }; }; } }; 'city': { name: 'city'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'imageUrl': { name: 'imageUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'latitude': { name: 'latitude'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'likedByUsers': { name: 'likedByUsers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; }; }; } }; 'longitude': { name: 'longitude'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'opinions': { name: 'opinions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Opinion'; ofType: null; }; }; } }; 'ownProducts': { name: 'ownProducts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OwnProduct'; ofType: null; }; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'verifications': { name: 'verifications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Verification'; ofType: null; }; }; } }; 'verified': { name: 'verified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'String': unknown;
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'favoriteShops': { name: 'favoriteShops'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; }; }; } }; 'firstName': { name: 'firstName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'img': { name: 'img'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastName': { name: 'lastName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'password': { name: 'password'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'phoneNumber': { name: 'phoneNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'shops': { name: 'shops'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'tier': { name: 'tier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'Verification': { kind: 'OBJECT'; name: 'Verification'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; }; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}